{"ast":null,"code":"import React,{useEffect,useId,useState}from'react';import{useAppDispatch}from'../redux/hooks.ts';import{updateEmail,updatePassword}from'../redux/features/users/userSlice.ts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const LoginInput=_ref=>{let{inputType,labelText}=_ref;const dispatch=useAppDispatch();const id=useId();const[inputValue,setInputValue]=useState('');const onInputChange=e=>{setInputValue(e.target.value);};useEffect(()=>{dispatch(inputType==='email'?updateEmail(inputValue):updatePassword(inputValue));},[dispatch,inputType,inputValue]);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-[2px] flex-col mt-[20px]\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:id,className:\"font-bold font-serif leading-[20px] text-[18px] md:text-[14px]\",children:labelText}),/*#__PURE__*/_jsx(\"input\",{onChange:onInputChange,value:inputValue,className:\"w-full rounded-[5px] py-[14px] px-[20px] h-[50px] font-sans font-normal leading-[22px] text-[18px] md:text-[14px] text-dark-blue bg-[#E0E0E0] border-none focus:outline-1 focus:outline-gold\",id:id,type:inputType,placeholder:`${inputType.substring(0,1).toUpperCase()}${inputType.substring(1,inputType.length)}`})]});};","map":{"version":3,"names":["React","useEffect","useId","useState","useAppDispatch","updateEmail","updatePassword","jsx","_jsx","jsxs","_jsxs","LoginInput","_ref","inputType","labelText","dispatch","id","inputValue","setInputValue","onInputChange","e","target","value","className","children","htmlFor","onChange","type","placeholder","substring","toUpperCase","length"],"sources":["/Users/souvlaki/Desktop/projects/testTask/frontend/src/components/LoginInput.tsx"],"sourcesContent":["import React, {FC, useEffect, useId, useState} from 'react'\nimport { useAppDispatch } from '../redux/hooks.ts'\nimport { updateEmail, updatePassword } from '../redux/features/users/userSlice.ts';\n\ninterface Props {\n    inputType: 'email' | 'password';\n    labelText: string;\n}\n\nexport const LoginInput: FC<Props> = ({inputType, labelText}) => {\n    const dispatch = useAppDispatch()\n    const id = useId()\n    const [inputValue, setInputValue] = useState('')\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {        \n        setInputValue(e.target.value)\n        \n    }\n\n    useEffect(()=>{\n        dispatch(inputType === 'email' ? updateEmail(inputValue): updatePassword(inputValue))\n    }, [dispatch, inputType, inputValue])\nreturn (\n    <div className=\"flex gap-[2px] flex-col mt-[20px]\">\n        <label htmlFor = {id} className='font-bold font-serif leading-[20px] text-[18px] md:text-[14px]'>{labelText}</label>\n        <input onChange={onInputChange} value={inputValue} className='w-full rounded-[5px] py-[14px] px-[20px] h-[50px] font-sans font-normal leading-[22px] text-[18px] md:text-[14px] text-dark-blue bg-[#E0E0E0] border-none focus:outline-1 focus:outline-gold' id={id} type={inputType} placeholder={`${inputType.substring(0,1).toUpperCase()}${inputType.substring(1,inputType.length)}`}/>\n    </div>\n)\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAOC,SAAS,CAAEC,KAAK,CAAEC,QAAQ,KAAO,OAAO,CAC3D,OAASC,cAAc,KAAQ,mBAAmB,CAClD,OAASC,WAAW,CAAEC,cAAc,KAAQ,sCAAsC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAOnF,MAAO,MAAM,CAAAC,UAAqB,CAAGC,IAAA,EAA4B,IAA3B,CAACC,SAAS,CAAEC,SAAS,CAAC,CAAAF,IAAA,CACxD,KAAM,CAAAG,QAAQ,CAAGX,cAAc,CAAC,CAAC,CACjC,KAAM,CAAAY,EAAE,CAAGd,KAAK,CAAC,CAAC,CAClB,KAAM,CAACe,UAAU,CAAEC,aAAa,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAEhD,KAAM,CAAAgB,aAAa,CAAIC,CAAsC,EAAK,CAC9DF,aAAa,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAEjC,CAAC,CAEDrB,SAAS,CAAC,IAAI,CACVc,QAAQ,CAACF,SAAS,GAAK,OAAO,CAAGR,WAAW,CAACY,UAAU,CAAC,CAAEX,cAAc,CAACW,UAAU,CAAC,CAAC,CACzF,CAAC,CAAE,CAACF,QAAQ,CAAEF,SAAS,CAAEI,UAAU,CAAC,CAAC,CACzC,mBACIP,KAAA,QAAKa,SAAS,CAAC,mCAAmC,CAAAC,QAAA,eAC9ChB,IAAA,UAAOiB,OAAO,CAAIT,EAAG,CAACO,SAAS,CAAC,gEAAgE,CAAAC,QAAA,CAAEV,SAAS,CAAQ,CAAC,cACpHN,IAAA,UAAOkB,QAAQ,CAAEP,aAAc,CAACG,KAAK,CAAEL,UAAW,CAACM,SAAS,CAAC,8LAA8L,CAACP,EAAE,CAAEA,EAAG,CAACW,IAAI,CAAEd,SAAU,CAACe,WAAW,CAAE,GAAGf,SAAS,CAACgB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGjB,SAAS,CAACgB,SAAS,CAAC,CAAC,CAAChB,SAAS,CAACkB,MAAM,CAAC,EAAG,CAAC,CAAC,EACzX,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}