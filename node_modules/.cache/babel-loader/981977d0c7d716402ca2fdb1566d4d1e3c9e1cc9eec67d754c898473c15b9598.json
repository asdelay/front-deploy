{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n// Define the initial state using that type\nconst initialState = {\n  loginInputData: {\n    loginEmail: '',\n    loginPassword: ''\n  },\n  isUserLoggedIn: false\n};\nexport const userSlice = createSlice({\n  name: 'user',\n  // `createSlice` will infer the state type from the `initialState` argument\n  initialState,\n  reducers: {\n    updateLoginData: (state, action) => {\n      state.loginEmail = action.payload;\n    }\n  }\n});\nexport const {\n  updateLoginEmail\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","loginInputData","loginEmail","loginPassword","isUserLoggedIn","userSlice","name","reducers","updateLoginData","state","action","payload","updateLoginEmail","actions","reducer"],"sources":["/Users/souvlaki/Desktop/projects/testTask/frontend/src/redux/features/users/userSlice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../../store'\n\ntype InputData = {\n  loginEmail: string;\n  loginPassword: string;\n}\n\ninterface UserState {\n    loginInputData: InputData\n    isUserLoggedIn: boolean\n}\n\n// Define the initial state using that type\nconst initialState: UserState = {\n  loginInputData: {\n    loginEmail: '',\n    loginPassword: '',\n  },\n  isUserLoggedIn: false\n}\n\nexport const userSlice = createSlice({\n  name: 'user',\n  // `createSlice` will infer the state type from the `initialState` argument\n  initialState,\n  reducers: {\n    updateLoginData: (state, action: PayloadAction<string>) => {\n        state.loginEmail = action.payload\n    },\n  },\n})\n\nexport const { updateLoginEmail } = userSlice.actions\n\nexport default userSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAc9C;AACA,MAAMC,YAAuB,GAAG;EAC9BC,cAAc,EAAE;IACdC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE;EACjB,CAAC;EACDC,cAAc,EAAE;AAClB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACnCO,IAAI,EAAE,MAAM;EACZ;EACAN,YAAY;EACZO,QAAQ,EAAE;IACRC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACvDD,KAAK,CAACP,UAAU,GAAGQ,MAAM,CAACC,OAAO;IACrC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAiB,CAAC,GAAGP,SAAS,CAACQ,OAAO;AAErD,eAAeR,SAAS,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}