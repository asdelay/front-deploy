{"ast":null,"code":"var _jsxFileName = \"/Users/souvlaki/Desktop/projects/testTask/frontend/src/components/LoginInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useId } from 'react';\nimport { useAppSelector, useAppDispatch } from '../redux/hooks.ts';\nimport { updateLoginData } from '../redux/features/users/userSlice.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginInput = ({\n  inputType,\n  labelText\n}) => {\n  _s();\n  const count = useAppSelector(state => inputType === 'email' ? state.users.loginInputData.loginEmail : state.users.loginInputData.loginPassword);\n  const dispatch = useAppDispatch();\n  console.log(count);\n  const id = useId();\n  const onInputChange = e => {\n    const inputData = e.target.value;\n    dispatch(updateLoginData({\n      inputType,\n      inputData\n    }));\n  };\n  console.log(count);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex gap-[2px] flex-col mt-[20px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"font-bold font-serif leading-[20px] text-[18px] md:text-[14px]\",\n      children: labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onInputChange,\n      value: count,\n      className: \"w-full rounded-[5px] py-[14px] px-[20px] h-[50px] font-sans font-normal leading-[22px] text-[18px] md:text-[14px] text-dark-blue bg-[#E0E0E0] border-none focus:outline-1 focus:outline-gold\",\n      id: id,\n      type: inputType,\n      placeholder: `${inputType.substring(0, 1).toUpperCase()}${inputType.substring(1, inputType.length)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginInput, \"o6zYh3v5YhnpR8qL/J6/sHuA8KA=\", false, function () {\n  return [useAppSelector, useAppDispatch, useId];\n});\n_c = LoginInput;\nvar _c;\n$RefreshReg$(_c, \"LoginInput\");","map":{"version":3,"names":["React","useId","useAppSelector","useAppDispatch","updateLoginData","jsxDEV","_jsxDEV","LoginInput","inputType","labelText","_s","count","state","users","loginInputData","loginEmail","loginPassword","dispatch","console","log","id","onInputChange","e","inputData","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","substring","toUpperCase","length","_c","$RefreshReg$"],"sources":["/Users/souvlaki/Desktop/projects/testTask/frontend/src/components/LoginInput.tsx"],"sourcesContent":["import React, {FC, useId} from 'react'\nimport { useAppSelector, useAppDispatch } from '../redux/hooks.ts'\nimport { updateLoginData } from '../redux/features/users/userSlice.ts';\n\ninterface Props {\n    inputType: 'email' | 'password';\n    labelText: string;\n}\n\nexport const LoginInput: FC<Props> = ({inputType, labelText}) => {\n    const count = useAppSelector((state) => inputType === 'email' ? state.users.loginInputData.loginEmail : state.users.loginInputData.loginPassword)\n    const dispatch = useAppDispatch()\n\n    console.log(count)\n\n    const id = useId()\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const inputData = e.target.value\n        dispatch(updateLoginData({inputType, inputData}))\n        \n    }\n    console.log(count)\nreturn (\n    <div className=\"flex gap-[2px] flex-col mt-[20px]\">\n        <label htmlFor = {id} className='font-bold font-serif leading-[20px] text-[18px] md:text-[14px]'>{labelText}</label>\n        <input onChange={onInputChange} value={count} className='w-full rounded-[5px] py-[14px] px-[20px] h-[50px] font-sans font-normal leading-[22px] text-[18px] md:text-[14px] text-dark-blue bg-[#E0E0E0] border-none focus:outline-1 focus:outline-gold' id={id} type={inputType} placeholder={`${inputType.substring(0,1).toUpperCase()}${inputType.substring(1,inputType.length)}`}/>\n    </div>\n)\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAOC,KAAK,QAAO,OAAO;AACtC,SAASC,cAAc,EAAEC,cAAc,QAAQ,mBAAmB;AAClE,SAASC,eAAe,QAAQ,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvE,OAAO,MAAMC,UAAqB,GAAGA,CAAC;EAACC,SAAS;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAMC,KAAK,GAAGT,cAAc,CAAEU,KAAK,IAAKJ,SAAS,KAAK,OAAO,GAAGI,KAAK,CAACC,KAAK,CAACC,cAAc,CAACC,UAAU,GAAGH,KAAK,CAACC,KAAK,CAACC,cAAc,CAACE,aAAa,CAAC;EACjJ,MAAMC,QAAQ,GAAGd,cAAc,CAAC,CAAC;EAEjCe,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EAElB,MAAMS,EAAE,GAAGnB,KAAK,CAAC,CAAC;EAElB,MAAMoB,aAAa,GAAIC,CAAsC,IAAK;IAC9D,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAChCR,QAAQ,CAACb,eAAe,CAAC;MAACI,SAAS;MAAEe;IAAS,CAAC,CAAC,CAAC;EAErD,CAAC;EACDL,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EACtB,oBACIL,OAAA;IAAKoB,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAC9CrB,OAAA;MAAOsB,OAAO,EAAIR,EAAG;MAACM,SAAS,EAAC,gEAAgE;MAAAC,QAAA,EAAElB;IAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpH1B,OAAA;MAAO2B,QAAQ,EAAEZ,aAAc;MAACI,KAAK,EAAEd,KAAM;MAACe,SAAS,EAAC,8LAA8L;MAACN,EAAE,EAAEA,EAAG;MAACc,IAAI,EAAE1B,SAAU;MAAC2B,WAAW,EAAE,GAAG3B,SAAS,CAAC4B,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG7B,SAAS,CAAC4B,SAAS,CAAC,CAAC,EAAC5B,SAAS,CAAC8B,MAAM,CAAC;IAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpX,CAAC;AAEV,CAAC;AAAAtB,EAAA,CApBYH,UAAqB;EAAA,QAChBL,cAAc,EACXC,cAAc,EAIpBF,KAAK;AAAA;AAAAsC,EAAA,GANPhC,UAAqB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}