{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import userReducer from'./features/users/userSlice.ts';export const store=configureStore({reducer:{users:userReducer}});// Infer the `RootState` and `AppDispatch` types from the store itself\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["configureStore","userReducer","store","reducer","users"],"sources":["/Users/souvlaki/Desktop/projects/testTask/frontend/src/redux/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport userReducer from './features/users/userSlice.ts'\n\nexport const store = configureStore({\n  reducer: {\n    users: userReducer,\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAO,CAAAC,WAAW,KAAM,+BAA+B,CAEvD,MAAO,MAAM,CAAAC,KAAK,CAAGF,cAAc,CAAC,CAClCG,OAAO,CAAE,CACPC,KAAK,CAAEH,WACT,CACF,CAAC,CAAC,CAEF;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}